








[{"content":"This is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing. \u0026#x1f680;\nYou can also use these content pages to define Hugo metadata like titles and descriptions that will be used for SEO and other purposes.\n","externalUrl":null,"permalink":"/it/tags/advanced/","section":"Tag","summary":"\u003cp\u003eThis is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing. \u0026#x1f680;\u003c/p\u003e","title":"Advanced","type":"tags"},{"content":"","externalUrl":null,"permalink":"/zh-tw/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/zh-tw/","section":"Blowfish","summary":"","title":"Blowfish","type":"page"},{"content":"","externalUrl":null,"permalink":"/zh-tw/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":" Hello World! # Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut non lorem diam. Quisque vulputate nibh sodales eros pretium tincidunt. Aenean porttitor efficitur convallis. Nulla sagittis finibus convallis. Phasellus in fermentum quam, eu egestas tortor. Maecenas ac mollis leo. Integer maximus eu nisl vel sagittis.\nSuspendisse facilisis, mi ac scelerisque interdum, ligula ex imperdiet felis, a posuere eros justo nec sem. Nullam laoreet accumsan metus, sit amet tincidunt orci egestas nec. Pellentesque ut aliquet ante, at tristique nunc. Donec non massa nibh. Ut posuere lacus non aliquam laoreet. Fusce pharetra ligula a felis porttitor, at mollis ipsum maximus. Donec quam tortor, vehicula a magna sit amet, tincidunt dictum enim. In hac habitasse platea dictumst. Mauris sit amet ornare ligula, blandit consequat risus. Duis malesuada pellentesque lectus, non feugiat turpis eleifend a. Nullam tempus ante et diam pretium, ac faucibus ligula interdum.\n","externalUrl":null,"permalink":"/sql/hello-world/","section":"SQL學習資料分享","summary":"\u003ch2 class=\"relative group\"\u003eHello World! \n    \u003cdiv id=\"hello-world\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#hello-world\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eLorem ipsum dolor sit amet, consectetur adipiscing elit. Ut non lorem diam. Quisque vulputate nibh sodales eros pretium tincidunt. Aenean porttitor efficitur convallis. Nulla sagittis finibus convallis. Phasellus in fermentum quam, eu egestas tortor. Maecenas ac mollis leo. Integer maximus eu nisl vel sagittis.\u003c/p\u003e","title":"Hello, World!","type":"sql"},{"content":"LeetCode 是一個知名的在線编程平台，提供豐富的算法和数据结构题目。 無論你是初學者還是求職者，都可以通過刷題提升編程能力，積累實戰經驗，為技術面是做好充足準備。\n","externalUrl":null,"permalink":"/leetcode/","section":"LeetCode解題","summary":"\u003cp\u003eLeetCode 是一個知名的在線编程平台，提供豐富的算法和数据结构题目。\n無論你是初學者還是求職者，都可以通過刷題提升編程能力，積累實戰經驗，為技術面是做好充足準備。\u003c/p\u003e","title":"LeetCode解題","type":"leetcode"},{"content":"學 SQL 最直接的一步就是：「我想看資料，那要怎麼寫？」\n答案只有兩個字：SELECT。\nSELECT 是所有 SQL 語法中的核心，你可以把它當成「我要查詢」的意思，語法結構就像是和資料庫對話：\n📣 「欸，幫我找一下這個表格裡面的這幾個欄位，記得條件是這樣，還有請排序一下。」 # 這篇文章，就是要讓你熟練這句話該怎麼翻成 SQL。\n🧪 最基本的 SELECT 語法長這樣 # SELECT 欄位名稱 FROM 資料表名稱; 範例：\n假設我們有一個 employees 表格，裡面有員工的名字、部門與薪資：\n如果你只想查出所有人的名字與部門：\nSELECT name, department FROM employees; 🎯 加上條件過濾：WHERE # 如果你只想查薪資大於 60000 的員工，就要用 WHERE 條件語法：\nSELECT name, salary FROM employees WHERE salary \u0026gt; 60000; 這樣會回傳 Bob 的資料。\n🔀 資料排序：ORDER BY\n想把資料照薪資從高到低排列？\nSELECT name, salary FROM employees ORDER BY salary DESC; 加上 DESC（降冪）或 ASC（升冪）就能排序。\n🧯 限制資料筆數：LIMIT\n有些資料表太大，我們不想一口氣撈太多資料，可以用 LIMIT 只抓幾筆：\nSELECT * FROM employees LIMIT 2; 這樣只會抓前兩筆資料。\n👉 如果你用的是 SQL Server，要改用 TOP 或 FETCH 語法；而在 PostgreSQL、MySQL 都支援 LIMIT。\n🧠 組合語法實戰：查出 IT 部門薪資超過 65000 的人，依薪資排序\nSELECT name, department, salary FROM employees WHERE department = \u0026#39;IT\u0026#39; AND salary \u0026gt; 65000 ORDER BY salary DESC; ⚠️ 初學者常見錯誤\n錯誤訊息\t原因說明\nUnknown column \u0026lsquo;Name\u0026rsquo;\tSQL 是區分欄位名稱大小寫的（視資料庫設定），要檢查欄位拼寫是否正確\nSELECT * FROM 少了 ;\t雖然不是所有 DBMS 都強制 ;，但加上它可以避免執行錯誤\n沒加 FROM\tSELECT 一定要指定資料來源表格，否則會報錯\n🪜 SELECT 技能升級任務 # 🎯 初學任務：打開你能操作的資料庫，用 SELECT 查出某張表的前三筆資料、含欄位條件與排序\n你可以使用：\nSQLite + DB Browser（免安裝資料庫伺服器）\nMySQL + Workbench\n或線上工具 like SQL Fiddle\n🧭 小結：SELECT 是資料的入口，千萬別小看它 # 很多人以為 SELECT 很簡單，但其實這是資料查詢世界的「入口語法」。你學會怎麼精準寫 SELECT，也就踏出了進入資料世界的第一步。\n而接下來，你會遇到更強大的工具：WHERE 裡的條件邏輯、模糊查詢、IN、BETWEEN、IS NULL 等等。\n⏭ 下一篇將進入支線 B2： # 🔍 「SQL 條件過濾大全：你會的不只 WHERE，還有 IN、LIKE、BETWEEN 等等進階查詢技巧！」\n📌 喜歡這個系列嗎？按下追蹤、收藏或留言告訴我你最想學的部分，我將持續更新這套 SQL 技能樹，一步步幫你升級資料思維！\n","externalUrl":null,"permalink":"/sql/sql-b1/sql-b1/","section":"SQL學習資料分享","summary":"\u003cp\u003e學 SQL 最直接的一步就是：「我想看資料，那要怎麼寫？」\u003c/p\u003e\n\u003cp\u003e答案只有兩個字：SELECT。\u003c/p\u003e","title":"SELECT 查詢初探：你要的資料，其實一句話就能叫出來｜SQL 系列支線 B1","type":"sql"},{"content":"","externalUrl":null,"permalink":"/zh-tw/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/social/","section":"Socials","summary":"","title":"Socials","type":"social"},{"content":"","externalUrl":null,"permalink":"/tags/sql/","section":"标签","summary":"","title":"SQL","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/sql-%E7%B3%BB%E5%88%97%E4%B8%80/","section":"标签","summary":"","title":"SQL 系列一","type":"tags"},{"content":"在進入 SQL 語法與資料操作之前，我們要先問自己一個問題：我們到底在處理的是什麼資料？\n這就像是想學開車，你得先知道方向盤、油門與車子是怎麼組成的，而不是一上車就猛踩油門。學習 SQL 的第一步，就是建立正確的資料庫「世界觀」。\n🧱 資料是什麼？一切從「表格」開始 # 很多人初學 SQL 時會覺得它很像 Excel。其實這個聯想沒錯，但不夠精確。\n在關聯式資料庫（Relational Database）中，資料是以「表格」的形式存在。這些表格可以互相連結、拆解、過濾、排序，就像一張張有關聯性的電子試算表。\n表格的構成：\nid name age city 1 Alice 28 New York 2 Bob 34 Tokyo 3 Charlie 22 Taipei 這樣的表格就被稱為一張「資料表（Table）」，每一列是「一筆資料（Row）」，每一欄是「一個欄位（Column）」。你寫 SQL，就是為了去查這些資料、整理這些資料，甚至建立與維護這些表格。\n🔗 為什麼叫「關聯式」資料庫？\n所謂「關聯式」的意思，就是表格與表格之間可以建立關聯（Relationship）。比方說，員工資訊在一張表，部門資訊在另一張表，兩張表可以透過「部門代號」這個欄位互相對應起來。\n這樣的設計讓資料更彈性、可維護性高，也就是：\n不用重複資料（資料表之間可分開管理）\n資料一致性更高（修改部門名稱不需修改每位員工）\n查詢更有彈性（可用 JOIN 將多張表結合查詢）\n🔍 常見的資料庫系統：選一個來玩玩吧！ # SQL 語法幾乎是「跨資料庫系統通用的語言」，但資料庫本身有很多種，像是：\n資料庫系統\t特點\t使用場景\nMySQL\t免費、開源、輕量\t中小企業、網站後端常用\nPostgreSQL\t功能強大、支援地理空間查詢\t科學分析、金融、政府系統\nSQLite\t輕巧、無伺服器、單檔運作\t行動 App、本地小型專案\nSQL Server\t微軟出品、商業整合性高\tWindows 生態系、企業內部系統\nOracle\t高穩定性、複雜功能支援\t大型企業、銀行、保險產業\n對初學者來說，推薦從 MySQL 或 SQLite 入門，因為好安裝、資源多，而且可以快速看到成果。\n❓SQL 和 NoSQL 有什麼不同？ # 很多人在學習資料庫時會看到「NoSQL」這個詞，會不小心混淆。\n簡單來說：\n項目\tSQL（關聯式資料庫）\tNoSQL（非關聯式）\n結構\t表格、欄列\t文件、鍵值對、圖形等\n適合情境\t資料結構穩定、資料之間有關聯\t資料結構彈性、不一定要關聯\n查詢語言\t使用 SQL 語法\t各自有 API 或語法（如 MongoDB 查詢語法）\n常見例子\tMySQL、PostgreSQL\tMongoDB、Firebase、Redis\n在進入大數據與非結構化資料之前，SQL 是打好資料邏輯基礎的必經之路。\n🧭 結語：別急著寫 SQL，先理解你要查的「世界」 # 當你想要學好 SQL，請記得第一步不是打開編輯器，而是：\n想清楚「資料是什麼？它們之間有什麼關係？」\n瞭解你所接觸的資料庫長什麼樣子\n選擇一套你能實際操作的資料庫系統開始練習\n建立好這樣的「資料世界觀」後，你的學習會走得比別人更穩，也更快進入狀況。\n","externalUrl":null,"permalink":"/sql/sql-a1/sql-a1/","section":"SQL學習資料分享","summary":"\u003cp\u003e在進入 SQL 語法與資料操作之前，我們要先問自己一個問題：我們到底在處理的是什麼資料？\u003c/p\u003e","title":"SQL 學習第一步：資料庫世界觀建立｜資料從哪裡來，又為什麼這麼重要？","type":"sql"},{"content":"學 SQL 前，你是不是也曾經困惑：\n「SQL 到底是語言還是工具？」\n「為什麼那麼多人說資料分析第一步是學 SQL？」\n「我學會 SELECT * 就代表會 SQL 了嗎？」\n今天就讓我們用最直白的方式來了解 SQL 是什麼，以及它在資料世界中扮演什麼角色。\n💬 SQL 是什麼？一句話定義它 # SQL 是資料庫的語言，就像 Excel 的公式，是與資料對話的工具。\nSQL，全名是 Structured Query Language（結構化查詢語言），是用來「與關聯式資料庫溝通」的一種語言。\n你可以用它來：\n查資料（查出符合條件的訂單）\n改資料（修改使用者的地址）\n建表格（新增一張記錄報表的表）\n控制權限（讓某些人只能看資料，不能改資料）\n它不只是「查詢」語言，更是一整套資料操作語言。\n🧩 SQL 有哪些「語法模組」？ # SQL 語法可以依功能分類為四大類（別背它們，先理解）：\n你最常用的會是 DQL，也就是查資料的 SELECT，但其他類也會在你維護資料庫時逐漸用上。\n🧠 SQL 的三個核心概念 # 1. SQL 是「聲明式」語言\n你只要說出你想要什麼，資料庫就幫你查出來。\n不像 Python 那樣需要寫 for 迴圈，SQL 更像是：\n「嘿資料庫，幫我找出所有訂單金額大於 $1000 的訂單，按時間排序一下。」\n2. SQL 是跨平台的\n大多數資料庫（MySQL、PostgreSQL、SQL Server）都支援 SQL 語法，只差在一些小細節（函式、語法結構）。你學會一次，大致能通用多個系統。\n3. SQL 是資料分析的核心技能之一\n從後端工程師、資料分析師、資料工程師，到商業分析 PM，幾乎都需要會 SQL，因為只要你要分析「儲存在資料庫中的資料」，你就得透過 SQL 來取得它。\n🧭 小結：SQL 是資料世界的語言起點 # SQL 的重要性，就像網頁前端的 HTML，你可能一開始只會寫 SELECT *，但只要持續練習，你會發現它是資料邏輯最重要的通用語言。\n","externalUrl":null,"permalink":"/sql/sql-a2/sql-a2/","section":"SQL學習資料分享","summary":"\u003cp\u003e學 SQL 前，你是不是也曾經困惑：\u003c/p\u003e\n\u003cp\u003e「SQL 到底是語言還是工具？」\u003c/p\u003e\n\u003cp\u003e「為什麼那麼多人說資料分析第一步是學 SQL？」\u003c/p\u003e","title":"SQL 學習第二步：SQL 是什麼？為什麼資料工程師、分析師都離不開它？","type":"sql"},{"content":"","externalUrl":null,"permalink":"/series/sql%E5%88%9D%E5%AD%B8/","section":"Series","summary":"","title":"SQL初學","type":"series"},{"content":"學習不只是自行吸收，還需要進行使用\n因此整理文章的同時便是再一次的學習\n","externalUrl":null,"permalink":"/sql/","section":"SQL學習資料分享","summary":"\u003cp\u003e學習不只是自行吸收，還需要進行使用\u003c/p\u003e\n\u003cp\u003e因此整理文章的同時便是再一次的學習\u003c/p\u003e","title":"SQL學習資料分享","type":"sql"},{"content":"","externalUrl":null,"permalink":"/zh-tw/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/%E6%95%99%E5%AD%B8/","section":"标签","summary":"","title":"教學","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/%E6%96%B0%E6%89%8B/","section":"标签","summary":"","title":"新手","type":"tags"},{"content":"本書由日本教授 岩本茂樹所寫\n主要由作者本人親身經驗、日常生活、電影情節中提出問題讓人去思考在作品中或行為當中，背後是否有什麼社會學的影響。\n像是男女分工、社會資本、溝通交流在認定一切都是早已決定的前提下，是否從另一個角度看其實並非如此。\n男女分工有許多研究或刻板印象會表示男女分工是建立在男性、女性本能上，然而有專家到了國外村落研究當地文化時，卻發現他們的分工並不是單指有分男性女性，有的村莊以女性狩獵男性育兒，有的村莊男女皆要出外打獵。\n因此專家得出的結論是實際上會有什麼性別該做什麼工作不是因爲實際的性別，而是環境的影響下得到的印象。\n社會資本的通常是根據父母的社經地位決定，對於一些人來說需要特別去做的事，在他人眼中或許只是日常的一塊每日讀書、看音樂劇、國外留學。\n這些定義了所謂正常、優秀、完美的人生，通常跟大部分的人並不一樣，並非所有人都可以對孩子有經濟上的支持，那當人不優秀、不完美成為他人眼中不正常的存在時，就會想要做「反社會」的事。\n藉此表示並非自己不上道，而是社會的規則不適用於自己，但社會的規則還是由多數人決定，選擇了「反社會」道路的人會在社會上更加難以適應。\n因此提出了討厭這個社會，就更要融入這個社會成為裡面的最高層級再改變規則。\n書裡提到了很多社會上的事情，讓人反思的不是這些事的對錯，而是當作這些事或看到人做這些事時，是因為受了什麼影響才產生。\n由於書中使用生活中常見的例子，因此更能感同身受。\n","externalUrl":null,"permalink":"/social/social1/social1/","section":"Socials","summary":"\u003cp\u003e本書由日本教授 岩本茂樹所寫\u003c/p\u003e\n\u003cp\u003e主要由作者本人親身經驗、日常生活、電影情節中提出問題讓人去思考在作品中或行為當中，背後是否有什麼社會學的影響。\u003c/p\u003e","title":"鍛鍊思考力 的社會讀本","type":"social"},{"content":"書，不只是讀\n還必須吸收，吸收後反覆咀嚼\n將文字成為自己的一部分\n","externalUrl":null,"permalink":"/read/","section":"讀書心得","summary":"\u003cp\u003e書，不只是讀\u003c/p\u003e\n\u003cp\u003e還必須吸收，吸收後反覆咀嚼\u003c/p\u003e\n\u003cp\u003e將文字成為自己的一部分\u003c/p\u003e\n\u003chr\u003e","title":"讀書心得","type":"read"}]